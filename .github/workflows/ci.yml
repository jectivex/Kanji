name: Kanji CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - '*'
  schedule:
    - cron:  '30 11,23 * * *'

env:
  DEVELOPER_DIR: /Applications/Xcode_14.1.app/Contents/Developer

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - run: |
          which java
          java --version
          echo "JAVA_HOME: ${JAVA_HOME}"
          find "${JAVA_HOME}" -type f

      - uses: actions/checkout@v2

      - name: Test (Debug)
        run: swift test --configuration debug

      - name: Test (Release)
        run: swift test --configuration release

  macos:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v2

      - name: Check JVM
        run: |
          which java
          java -version
          # /Users/runner/hostedtoolcache/Java_Temurin-Hotspot_jdk/8.0.345-1/x64/Contents/Home
          echo "JAVA_HOME: ${JAVA_HOME}"
          find "${JAVA_HOME}" -type f

          # Notable locations on macOS GH Runner:
          #
          # ${JAVA_HOME}/jre/lib/jvm.cfg
          # ${JAVA_HOME}/jre/lib/libnet.dylib
          # ${JAVA_HOME}/jre/lib/jli/libjli.dylib
          # ${JAVA_HOME}/jre/lib/libjava.dylib

          brew install openjdk@11
          which java
          java -version

      - name: Test (Debug)
        run: swift test --configuration debug

      - name: Test (Release)
        run: swift test --configuration release

  api-doc:
    #if: false
    runs-on: macos-12
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - name: Build documentation
        run: |
          swift -version
          export SWIFTPM_ENABLE_COMMAND_PLUGINS=1
          export DOCC_JSON_PRETTYPRINT="YES"

          # insert the docc dependency
          sed -I "" 's;^    dependencies: \[;    dependencies: [ .package(name: "swift-docc-plugin", url: "https://github.com/apple/swift-docc-plugin", from: "1.0.0"), ;1' Package.swift

          for module in KanjiVM JavaLib KanjiLib KanjiScript KotlinKanji; do
            echo "Building documentation for module: ${module}"
            swift package --allow-writing-to-directory docs \
              generate-documentation --target ${module} \
              --disable-indexing \
              --transform-for-static-hosting \
              --hosting-base-path ${module} \
              --output-path docs
          done


      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: '.'

