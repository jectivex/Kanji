name: Kanji CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - '*'
  schedule:
    - cron:  '30 11,23 * * *'

env:
  DEVELOPER_DIR: /Applications/Xcode_14.1.app/Contents/Developer

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - run: |
          which java
          java --version
          echo "JAVA_HOME: ${JAVA_HOME}"
          find "${JAVA_HOME}" -type f

        # notable locations on GH runner:
        # /usr/lib/jvm/temurin-11-jdk-amd64/lib/libjava.so
        # /usr/lib/jvm/temurin-11-jdk-amd64/lib/jli/libjli.so
        # /usr/lib/jvm/temurin-11-jdk-amd64/lib/server/libjvm.so
        # /usr/lib/jvm/temurin-11-jdk-amd64/lib/server/libjsig.so

      - uses: actions/checkout@v2

      - name: Test (Debug)
        run: LD_LIBRARY_PATH=${JAVA_HOME}/lib/:${JAVA_HOME}/lib/server/:${JAVA_HOME}/lib/jli/:${LD_LIBRARY_PATH} swift test --configuration debug -Xlinker -L${JAVA_HOME}/lib/ -Xlinker -L${JAVA_HOME}/lib/server/ -Xlinker -L${JAVA_HOME}/lib/jli/ -Xlinker -ljli -Xlinker -ljvm

      - name: Test (Release)
        run: LD_LIBRARY_PATH=${JAVA_HOME}/lib/:${JAVA_HOME}/lib/server/:${JAVA_HOME}/lib/jli/:${LD_LIBRARY_PATH} swift test --configuration release -Xlinker -L${JAVA_HOME}/lib/ -Xlinker -L${JAVA_HOME}/lib/server/ -Xlinker -L${JAVA_HOME}/lib/jli/ -Xlinker -ljli -Xlinker -ljvm

  macos:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v2

      - name: Check JVM
        run: |
          which java
          java -version
          # /Users/runner/hostedtoolcache/Java_Temurin-Hotspot_jdk/8.0.345-1/x64/Contents/Home
          echo "JAVA_HOME: ${JAVA_HOME}"
          find "${JAVA_HOME}" -type f

          # Notable locations on macOS GH Runner:
          #
          # ${JAVA_HOME}/jre/lib/jvm.cfg
          # ${JAVA_HOME}/jre/lib/libnet.dylib
          # ${JAVA_HOME}/jre/lib/jli/libjli.dylib
          # ${JAVA_HOME}/jre/lib/libjava.dylib

      - name: Test (Debug)
        run: swift test --configuration debug -Xlinker -L${JAVA_HOME}/jre/lib/jli/ -Xlinker -L${JAVA_HOME}/jre/lib/ -Xlinker -rpath -Xlinker ${JAVA_HOME}/jre/lib/jli/ -Xlinker -ljli 

      - name: Test (Release)
        run: swift test --configuration release -Xlinker -L${JAVA_HOME}/jre/lib/jli/ -Xlinker -L${JAVA_HOME}/jre/lib/ -Xlinker -rpath -Xlinker ${JAVA_HOME}/jre/lib/jli/ -Xlinker -ljli 

  api-doc:
    runs-on: macos-12
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - name: Build documentation
        run: |
          swift -version
          export SWIFTPM_ENABLE_COMMAND_PLUGINS=1
          export DOCC_JSON_PRETTYPRINT="YES"

          # insert the docc dependency
          sed -I "" 's;^    dependencies: \[;    dependencies: [ .package(name: "swift-docc-plugin", url: "https://github.com/apple/swift-docc-plugin", from: "1.0.0"), ;1' Package.swift

          swift package --allow-writing-to-directory docs \
            generate-documentation --target KanjiVM \
            --disable-indexing \
            --transform-for-static-hosting \
            --hosting-base-path KanjiVM \
            --output-path docs

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: '.'

